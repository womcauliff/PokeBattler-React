{"version":3,"sources":["sounds/101-opening.mp3","img/intro1.gif","img/intro2.gif","img/intro3.gif","img/intro4.gif","statechart.js","components/lib/LoadingIcon.js","components/Intro/GifMachine.js","components/Intro/Intro.js","components/lib/PropTypeValues.js","components/CharacterSelection.js","components/ChallengerSelection.js","components/MoveSelection.js","components/RoundResult.js","components/Win.js","components/EndGame.js","components/SoundOptions.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Machine","id","context","characters","characterId","challengerId","initial","states","soundOptions","on","SELECTED","intro","TIMEOUT","SKIP","characterSelection","SELECT","target","actions","challengerSelection","UNDO","battleSetup","","battle","WIN","LOSS","moveSelection","roundResult","NEXT","cond","send","loss","RETRY","win","endGame","setCharacter","assign","ctx","e","resetCharacter","setChallenger","resetHP","map","character","Object","objectSpread","currentHp","calcHp","totalHp","calculateResult","p1","find","_ref","calcDamage","moveId","defeated","resetDefeated","activities","guards","characterIsDefeated","_ref2","_ref3","challengerIsDefeated","_ref4","_ref5","noChallengersRemaining","_ref6","filter","_ref7","length","services","Math","floor","baseHp","level","p2","console","log","move","moves","power","basePower","attack","defense","category","baseAttack","baseDefense","baseSpAttack","baseSpDefense","dmg","STAB","typeEffectiveness","i","type","resistances","weaknesses","random","spinning","keyframes","_templateObject","Outer","styled","div","_templateObject2","ballHalfStyle","css","_templateObject3","Upper","_templateObject4","Lower","_templateObject5","Stripe","_templateObject6","Center","span","_templateObject7","LoadingIcon","react_default","a","createElement","GifMachine","currentGif","preloading","PRELOADED","grass","onEntry","display","after","2000","complete","onDone","pan","2100","4900","counterattack","3000","GifIntroMachine","withConfig","addGif1","gif1","addGif2","gif2","addGif3","gif3","addGif4","gif4","Intro","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","current","initialState","numLoaded","service","interpret","onTransition","setState","transition","skipRef","React","createRef","onLoaded","bind","assertThisInitialized","onSkipClick","onMouseEnter","start","focus","stop","_this2","_this$state$current$c","react","className","style","src","onLoad","alt","value","class","onClick","ref","Component","PokemonTypesPropTypes","PropTypes","oneOf","PokemonMovePropTypes","shape","number","isRequired","name","string","flavor_text","img","arrayOf","bool","CharacterSelection","key","concat","process","aria-label","ChallengerSelection","classNames","disabled","MoveSelection","challenger","RoundResult","Win","EndGame","SoundOptions","moveFocus","yesRef","noRef","innerText","toggleSound","App","gameStatechart","muted","matches","withContext","path","matchesState","components_SoundOptions","Intro_Intro","components_CharacterSelection","components_ChallengerSelection","components_MoveSelection","data-sc-value","toStrings","renderScreen","controls","autoPlay","mp3_file","width","height","data","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e51a3366.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/101-opening.957e5f1f.mp3\";","module.exports = __webpack_public_path__ + \"static/media/intro1.278afa60.gif\";","module.exports = __webpack_public_path__ + \"static/media/intro2.b5f5d3be.gif\";","module.exports = __webpack_public_path__ + \"static/media/intro3.6278c9f9.gif\";","module.exports = __webpack_public_path__ + \"static/media/intro4.d21214da.gif\";","import { Machine, send, assign, actions } from \"xstate\";\n\nexport default Machine(\n  {\n    id: \"pokebattler\",\n    context: {\n      characters: [],\n      characterId: null,\n      challengerId: null\n    },\n    initial: \"soundOptions\",\n    //initial: \"characterSelection\",\n    states: {\n      soundOptions: {\n        on: { SELECTED: \"intro\" }\n      },\n      intro: {\n        on: {\n          TIMEOUT: \"characterSelection\",\n          SKIP: \"characterSelection\"\n        }\n      },\n      characterSelection: {\n        on: {\n          SELECT: {\n            target: \"challengerSelection\",\n            actions: [\"setCharacter\"]\n          }\n        }\n      },\n      challengerSelection: {\n        on: {\n          SELECT: {\n            target: \"battleSetup\",\n            actions: [\"setChallenger\"]\n          },\n          UNDO: {\n            target: \"characterSelection\",\n            actions: [\"resetCharacter\"]\n          }\n        }\n      },\n      battleSetup: {\n        on: {\n          // Transient transition\n          \"\": {\n            target: \"battle\",\n            actions: [\"resetHP\"]\n          }\n        }\n      },\n      battle: {\n        on: {\n          WIN: \"win\",\n          LOSS: \"loss\"\n        },\n        initial: \"moveSelection\",\n        states: {\n          moveSelection: {\n            on: {\n              SELECT: {\n                target: \"roundResult\",\n                actions: [\"calculateResult\"]\n              }\n            }\n          },\n          roundResult: {\n            on: {\n              NEXT: [\n                {\n                  cond: \"characterIsDefeated\",\n                  actions: send(\"LOSS\")\n                },\n                {\n                  cond: \"challengerIsDefeated\",\n                  actions: send(\"WIN\")\n                },\n                {\n                  target: \"moveSelection\"\n                }\n              ]\n            }\n          }\n        }\n      },\n      loss: { on: { RETRY: \"characterSelection\" } },\n      win: {\n        on: {\n          NEXT: [\n            {\n              cond: \"noChallengersRemaining\",\n              target: \"endGame\"\n            },\n            { target: \"challengerSelection\" }\n          ]\n        }\n      },\n      endGame: {\n        on: {\n          RETRY: {\n            target: \"characterSelection\",\n            actions: [\"resetDefeated\"]\n          }\n        }\n      }\n    }\n  },\n  {\n    actions: {\n      setCharacter: assign({\n        characterId: (ctx, e) => e.characterId\n      }),\n      resetCharacter: assign({ characterId: null }),\n      setChallenger: assign({\n        challengerId: (ctx, e) => e.challengerId\n      }),\n      resetHP: assign({\n        characters: ctx =>\n          ctx.characters.map(character => {\n            if (\n              character.id === ctx.characterId ||\n              character.id === ctx.challengerId\n            ) {\n              return {\n                ...character,\n                currentHp: calcHp(character),\n                totalHp: calcHp(character)\n              };\n            }\n            return character;\n          })\n      }),\n      calculateResult: assign({\n        characters: (ctx, e) => {\n          const p1 = ctx.characters.find(({ id }) => id === ctx.characterId);\n          return ctx.characters.map(character => {\n            if (character.id === ctx.challengerId) {\n              return {\n                ...character,\n                currentHp:\n                  character.currentHp - calcDamage(p1, character, e.moveId) < 0\n                    ? 0\n                    : character.currentHp - calcDamage(p1, character, e.moveId),\n                defeated: character.currentHp - 50 <= 0\n              };\n            }\n            return character;\n          });\n        }\n      }),\n      resetDefeated: assign({\n        characters: ctx =>\n          ctx.characters.map(character => ({\n            ...character,\n            defeated: false\n          }))\n      })\n    },\n    activities: {},\n    guards: {\n      characterIsDefeated: ({ characters, characterId }) =>\n        characters.find(({ id }) => id === characterId).currentHp <= 0,\n      challengerIsDefeated: ({ characters, challengerId }) =>\n        characters.find(({ id }) => id === challengerId).currentHp <= 0,\n      noChallengersRemaining: ({ characters, characterId }) =>\n        characters.filter(({ id, defeated }) => id !== characterId && !defeated)\n          .length === 0\n    },\n    services: {}\n  }\n);\n\nfunction calcHp(p) {\n  return Math.floor((p.baseHp * 2 * p.level) / 100) + p.level + 10;\n}\n\nfunction calcDamage(p1, p2, moveId) {\n  console.log(p1, p2, moveId);\n  const { level, moves } = p1;\n  const move = moves.find(move => move.id === moveId);\n  console.log(move);\n  const power = move.basePower;\n  let attack = 1;\n  let defense = 1;\n\n  // added to give player advantage\n  // if (p1ID == starterID) {\n  //   level = level * 3.5;\n  // }\n\n  // If move's category is physical,\n  // use player's attack\n  // and opponent's defense stats\n  if (move.category === \"physical\") {\n    attack = p1.baseAttack;\n    defense = p2.baseDefense;\n  } else {\n    // else if move's category is special,\n    // use player's special attack\n    // and opponent's special defense stats\n    attack = p1.baseSpAttack;\n    defense = p2.baseSpDefense;\n  }\n\n  // first half of damage calculation\n  let dmg = (((2 * level) / 5 + 2) * power * (attack / defense)) / 50 + 2;\n\n  // Calculate damage modifier\n  let modifier = 1;\n\n  let STAB = 1;\n  let typeEffectiveness = 1;\n  let criticalHit = 1;\n  let other = 1;\n  let random = 1;\n\n  // determine if same-type attack-bonus\n  for (let i = 0; i < p1.type.length; i += 1) {\n    if (move.type === p1.type[i]) {\n      STAB = 1.5;\n      break;\n    }\n  }\n\n  // check if move type matches opponent's resistances\n  for (let i = 0; i < p2.resistances.length; i += 1) {\n    if (move.type === p2.resistances[i]) {\n      typeEffectiveness *= 0.5;\n\n      // added to give player advantage\n      // if (p1ID == starterID) {\n      //   typeEffectiveness *= 0.90;\n      // }\n      // addDescription($(\"<p>It's not very effective..</p>\"));\n    }\n  }\n\n  // check if move type matches opponent's weaknesses\n  for (let i = 0; i < p2.weaknesses.length; i += 1) {\n    if (move.type === p2.weaknesses[i]) {\n      typeEffectiveness *= 2;\n      // // added to give player advantage\n      // if (p1ID == challengerID) {\n      //   typeEffectiveness *= 1;\n      // }\n\n      // addDescription($(\"<p>It's super effective!</p>\"));\n    }\n  }\n\n  // ignoring critical hits for now\n  criticalHit = 1;\n\n  // ignoring ability to hold items\n  other = 1;\n\n  // calculating random decimal in the range of [0.85, 1]\n  const max = 1.0;\n  const min = 0.85;\n  random = Math.random() * (max - min) + min;\n\n  // calculating modifier, updating damage value\n  modifier = STAB * typeEffectiveness * criticalHit * other * random;\n  dmg *= modifier;\n  return Math.floor(dmg);\n}\n","import React from \"react\";\nimport styled, { css, keyframes } from \"styled-components\";\n\nconst spinning = keyframes`\n  from {\n    transform: rotate(0deg);\n  }\n  to {\n    transform: rotate(360deg);\n  }\n`;\nconst Outer = styled.div`\n  border-radius: 50%;\n  border: black 0.25em solid;\n  width: 3em;\n  height: 3em;\n  position: relative;\n  animation: ${spinning} 2s ease-in-out infinite;\n`;\nconst ballHalfStyle = css`\n  height: 50%;\n  width: 100%;\n  border-radius: 0;\n`;\nconst Upper = styled.div`\n  ${ballHalfStyle}\n  background: #cc1a00;\n  border-top-left-radius: 2em;\n  border-top-right-radius: 2em;\n`;\nconst Lower = styled.div`\n  ${ballHalfStyle}\n  border-bottom-left-radius: 1em;\n  border-bottom-right-radius: 1em;\n`;\nconst Stripe = styled.div`\n  height: 0.25em;\n  background-color: black;\n  width: 100%;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n`;\nconst Center = styled.span`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  border-radius: 50%;\n  border: black 0.2em solid;\n  width: 1em;\n  height: 1em;\n  margin: 0 auto;\n  background-color: white;\n`;\n\nexport default function LoadingIcon() {\n  return (\n    <Outer>\n      <Upper />\n      <Stripe />\n      <Center />\n      <Lower />\n    </Outer>\n  );\n}\n","import { Machine } from \"xstate\";\nconst GifMachine = Machine({\n  initial: \"preloading\",\n  context: {\n    currentGif: null\n  },\n  states: {\n    preloading: {\n      on: { PRELOADED: \"grass\" }\n    },\n    grass: {\n      onEntry: \"addGif1\",\n      initial: \"display\",\n      states: {\n        display: {\n          after: { 2000: \"complete\" }\n        },\n        complete: { type: \"final\" }\n      },\n      onDone: { target: \"pan\" }\n    },\n    pan: {\n      onEntry: \"addGif2\",\n      initial: \"display\",\n      states: {\n        display: {\n          after: { 2100: \"complete\" }\n        },\n        complete: { type: \"final\" }\n      },\n      onDone: { target: \"attack\" }\n    },\n    attack: {\n      onEntry: \"addGif3\",\n      initial: \"display\",\n      states: {\n        display: {\n          after: { 4900: \"complete\" }\n        },\n        complete: { type: \"final\" }\n      },\n      onDone: { target: \"counterattack\" }\n    },\n    counterattack: {\n      onEntry: [\"addGif4\"],\n      initial: \"display\",\n      states: {\n        display: {\n          after: { 3000: \"complete\" }\n        },\n        complete: { type: \"final\" }\n      },\n      onDone: { target: \"complete\" }\n    },\n    complete: {\n      type: \"final\"\n    }\n  }\n});\n\nexport default GifMachine;\n","import React, { Component, Fragment } from \"react\";\nimport { actions } from \"xstate\";\nimport { interpret } from \"xstate/lib/interpreter\";\nimport LoadingIcon from \"../lib/LoadingIcon\";\nimport GifMachine from \"./GifMachine\";\nimport gif1 from \"../../img/intro1.gif\";\nimport gif2 from \"../../img/intro2.gif\";\nimport gif3 from \"../../img/intro3.gif\";\nimport gif4 from \"../../img/intro4.gif\";\n\nconst { assign } = actions;\nconst GifIntroMachine = GifMachine.withConfig({\n  actions: {\n    addGif1: assign({ currentGif: gif1 }),\n    addGif2: assign({ currentGif: gif2 }),\n    addGif3: assign({ currentGif: gif3 }),\n    addGif4: assign({ currentGif: gif4 })\n  }\n});\n\nexport default class Intro extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      current: GifIntroMachine.initialState,\n      numLoaded: 0\n    };\n\n    this.service = interpret(GifIntroMachine)\n      .onTransition(current => this.setState({ current }))\n      .onDone(() => this.props.transition(\"TIMEOUT\"));\n\n    this.skipRef = React.createRef();\n\n    this.onLoaded = this.onLoaded.bind(this);\n    this.onSkipClick = this.onSkipClick.bind(this);\n    this.onMouseEnter = this.onMouseEnter.bind(this);\n  }\n  componentDidMount() {\n    this.service.start();\n    this.skipRef.current.focus();\n  }\n  componentWillUnmount() {\n    this.service.stop();\n  }\n  onSkipClick() {\n    this.props.transition(\"SKIP\");\n  }\n  onLoaded() {\n    this.setState(\n      ({ numLoaded }) => ({ numLoaded: numLoaded + 1 }),\n      () => {\n        if (this.state.numLoaded === 4) {\n          this.service.send({ type: \"PRELOADED\" });\n        }\n      }\n    );\n  }\n  onMouseEnter() {\n    this.skipRef.current.focus();\n  }\n  render() {\n    const { currentGif = \"\" } = this.state.current.context;\n    return (\n      <Fragment>\n        <div className=\"preloading\" style={{ display: \"none\" }}>\n          <img src={gif1} onLoad={this.onLoaded} alt=\"\" />\n          <img src={gif2} onLoad={this.onLoaded} alt=\"\" />\n          <img src={gif4} onLoad={this.onLoaded} alt=\"\" />\n          <img src={gif3} onLoad={this.onLoaded} alt=\"\" />\n        </div>\n\n        {this.state.current.value === \"preloading\" ? (\n          <div className=\"center\">\n            <LoadingIcon />\n          </div>\n        ) : (\n          <div class=\"img-container\">\n            <img src={currentGif} alt=\"\" />\n          </div>\n        )}\n\n        <div className=\"option-box\">\n          <button\n            className=\"skip-button\"\n            onClick={this.onSkipClick}\n            type=\"button\"\n            ref={this.skipRef}\n            onMouseEnter={this.onMouseEnter}\n          >\n            Skip Intro\n          </button>\n        </div>\n      </Fragment>\n    );\n  }\n}\n","import PropTypes from \"prop-types\";\n\nexport const PokemonTypesPropTypes = PropTypes.oneOf([\n  \"normal\",\n  \"fire\",\n  \"fighting\",\n  \"water\",\n  \"flying\",\n  \"grass\",\n  \"poison\",\n  \"electric\",\n  \"ground\",\n  \"psychic\",\n  \"rock\",\n  \"ice\",\n  \"bug\",\n  \"dragon\",\n  \"ghost\",\n  \"dark\",\n  \"steel\",\n  \"fairy\"\n]);\n\nexport const PokemonMovePropTypes = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string,\n  basePower: PropTypes.number,\n  type: PokemonTypesPropTypes,\n  category: PropTypes.oneOf([\"special\", \"physical\"]),\n  flavor_text: PropTypes.string\n});\n\nexport const PokemonPropTypes = PropTypes.shape({\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  img: PropTypes.string.isRequired,\n  type: PropTypes.arrayOf(PokemonTypesPropTypes),\n  weaknesses: PropTypes.arrayOf(PokemonTypesPropTypes),\n  resistances: PropTypes.arrayOf(PokemonTypesPropTypes),\n  baseHp: PropTypes.number,\n  baseAttack: PropTypes.number,\n  baseDefense: PropTypes.number,\n  baseSpAttack: PropTypes.number,\n  baseSpDefense: PropTypes.number,\n  level: PropTypes.number,\n  currentHp: PropTypes.number,\n  totalHp: PropTypes.number,\n  defeated: PropTypes.bool,\n  moves: PropTypes.arrayOf(PokemonMovePropTypes)\n});\n\nexport default {\n  PokemonTypesPropTypes,\n  PokemonMovePropTypes,\n  PokemonPropTypes\n};\n","import React, { Fragment } from \"react\";\nimport { PokemonPropTypes } from \"./lib/PropTypeValues\";\nconst propTypes = {\n  character: PokemonPropTypes\n};\nfunction CharacterSelection(props) {\n  return (\n    <Fragment>\n      <h2>Select your Pokémon.</h2>\n\n      <div className=\"characters\">\n        {props.characters.map(character => (\n          <div className=\"character-container\" key={character.id}>\n            <div className=\"character\" id={`character${character.id}`}>\n              <img\n                src={`${process.env.PUBLIC_URL}/assets/img/${character.img}`}\n                alt={character.name}\n              />\n            </div>\n            <h3 className=\"character-name\">{character.name}</h3>\n            <button\n              type=\"button\"\n              aria-label={`Select ${character.name}`}\n              onClick={() => {\n                props.send({ type: \"SELECT\", characterId: character.id });\n              }}\n            >\n              Select\n            </button>\n          </div>\n        ))}\n      </div>\n    </Fragment>\n  );\n}\nCharacterSelection.propTypes = propTypes;\nexport default CharacterSelection;\n","import React, { Fragment } from \"react\";\nimport classNames from \"classnames\";\nimport { PokemonPropTypes } from \"./lib/PropTypeValues\";\nconst propTypes = {\n  character: PokemonPropTypes\n};\nfunction ChallengerSelection(props) {\n  return (\n    <Fragment>\n      <h2>Select a challenger.</h2>\n      <button\n        type=\"button\"\n        onClick={() => {\n          props.send({\n            type: \"UNDO\"\n          });\n        }}\n      >\n        Re-select character\n      </button>\n      <div className=\"characters\">\n        {props.characters\n          .filter(character => character.id !== props.characterId)\n          .map(character => (\n            <div\n              className={classNames(\"character-container\", {\n                defeated: character.defeated\n              })}\n              key={character.id}\n            >\n              <div className=\"character\" id={`character${character.id}`}>\n                <img\n                  src={`${process.env.PUBLIC_URL}/assets/img/${character.img}`}\n                  alt={character.name}\n                />\n              </div>\n              <p className=\"character-name\">{character.name}</p>\n              <button\n                type=\"button\"\n                aria-label={`Select ${character.name}`}\n                disabled={character.defeated}\n                onClick={() => {\n                  props.send({\n                    type: \"SELECT\",\n                    challengerId: character.id\n                  });\n                }}\n              >\n                Select\n              </button>\n            </div>\n          ))}\n      </div>\n    </Fragment>\n  );\n}\nChallengerSelection.propTypes = propTypes;\nexport default ChallengerSelection;\n","import React, { Fragment } from \"react\";\nimport { PokemonPropTypes } from \"./lib/PropTypeValues\";\n\nconst propTypes = {\n  character: PokemonPropTypes,\n  challenger: PokemonPropTypes\n};\nfunction MoveSelection(props) {\n  const { character, challenger } = props;\n  console.log(character);\n  return (\n    <Fragment>\n      <h2>Select a Move.</h2>\n\n      <div className=\"characters\">\n        <div className=\"character-container\">\n          <div className=\"character\" id={`character${character.id}`}>\n            <img\n              src={`${process.env.PUBLIC_URL}/assets/img/${character.img}`}\n              alt={character.name}\n            />\n          </div>\n          <p className=\"character-name\">{character.name}</p>\n          <p>{character.currentHp}</p>\n          {character.moves.map(move => (\n            <button\n              type=\"button\"\n              key={move.id}\n              onClick={() => {\n                props.transition({\n                  type: \"SELECT\",\n                  moveId: move.id\n                });\n              }}\n            >\n              {move.name}\n            </button>\n          ))}\n        </div>\n        <div className=\"character-container\">\n          <div className=\"character\" id={`character${challenger.id}`}>\n            <img\n              src={`${process.env.PUBLIC_URL}/assets/img/${challenger.img}`}\n              alt={challenger.name}\n            />\n          </div>\n          <p className=\"character-name\">{challenger.name}</p>\n          <p>{challenger.currentHp}</p>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\nMoveSelection.propTypes = propTypes;\nexport default MoveSelection;\n","import React, { Fragment } from \"react\";\n\nexport default function RoundResult(props) {\n  const { character, challenger } = props;\n  return (\n    <Fragment>\n      <h2>Round Result.</h2>\n\n      <div className=\"characters\">\n        <div className=\"character-container\">\n          <div className=\"character\" id={`character${character.id}`}>\n            <img\n              src={`${process.env.PUBLIC_URL}/assets/img/${character.img}`}\n              alt={character.name}\n            />\n          </div>\n          <p className=\"character-name\">{character.name}</p>\n          <p>{character.currentHp}</p>\n          <button\n            type=\"button\"\n            onClick={() => {\n              props.transition({ type: \"NEXT\" });\n            }}\n          >\n            Next\n          </button>\n        </div>\n        <div className=\"character-container\">\n          <div className=\"character\" id={`character${challenger.id}`}>\n            <img\n              src={`${process.env.PUBLIC_URL}/assets/img/${challenger.img}`}\n              alt={challenger.name}\n            />\n          </div>\n          <p className=\"character-name\">{challenger.name}</p>\n          <p>{challenger.currentHp}</p>\n        </div>\n      </div>\n    </Fragment>\n  );\n}\n","import React, { Fragment } from \"react\";\n\nexport default function Win(props) {\n  return (\n    <Fragment>\n      <h2>You won!</h2>\n      <button\n        type=\"button\"\n        onClick={() => {\n          props.transition({\n            type: \"NEXT\"\n          });\n        }}\n      >\n        Next\n      </button>\n    </Fragment>\n  );\n}\n","import React from \"react\";\n\nexport default function EndGame(props) {\n  return (\n    <button\n      type=\"button\"\n      onClick={() => {\n        props.transition({\n          type: \"RETRY\"\n        });\n      }}\n    >\n      New Game\n    </button>\n  );\n}\n","import React, { Component, Fragment } from \"react\";\nimport LoadingIcon from \"./lib/LoadingIcon\";\n\nclass SoundOptions extends Component {\n  constructor(props) {\n    super(props);\n\n    this.moveFocus = this.moveFocus.bind(this);\n    this.yesRef = React.createRef();\n    this.noRef = React.createRef();\n  }\n\n  componentDidMount() {\n    this.yesRef.current.focus();\n  }\n\n  /**\n   * Handles mounseenter events for option buttons, changing the focus to the button.\n   * @param {SyntheticEvent} e Mouseenter Event\n   */\n  moveFocus(e) {\n    if (e.target.innerText === \"Yes\") {\n      this.yesRef.current.focus();\n    }\n    if (e.target.innerText === \"No\") {\n      this.noRef.current.focus();\n    }\n  }\n\n  render() {\n    const { send } = this.props;\n\n    return (\n      <Fragment>\n        <h2>Turn on Game Audio?</h2>\n\n        <LoadingIcon />\n\n        <div className=\"option-box\">\n          <button\n            type=\"button\"\n            onMouseEnter={this.moveFocus}\n            onClick={() => {\n              this.props.toggleSound();\n              send({ type: \"SELECTED\" });\n            }}\n            ref={this.yesRef}\n          >\n            Yes\n          </button>\n          <button\n            type=\"button\"\n            onMouseEnter={this.moveFocus}\n            onClick={() => {\n              send({ type: \"SELECTED\" });\n            }}\n            ref={this.noRef}\n          >\n            No\n          </button>\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport default SoundOptions;\n","import React, { Component } from \"react\";\n// import { matchesState, Machine, State } from \"xstate\";\nimport { interpret } from \"xstate\";\nimport { matchesState } from \"xstate/lib/utils\";\nimport gameStatechart from \"./statechart\";\nimport Intro from \"./components/Intro/Intro\";\nimport CharacterSelection from \"./components/CharacterSelection\";\nimport ChallengerSelection from \"./components/ChallengerSelection\";\nimport MoveSelection from \"./components/MoveSelection\";\nimport RoundResult from \"./components/RoundResult\";\nimport Win from \"./components/Win\";\nimport EndGame from \"./components/EndGame\";\n\nimport characters from \"./pokemon.json\";\nimport mp3_file from \"./sounds/101-opening.mp3\";\n\nimport \"./App.css\";\nimport SoundOptions from \"./components/SoundOptions\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: gameStatechart.initialState,\n      muted: true\n    };\n\n    this.matches = this.matches.bind(this);\n\n    this.service = interpret(\n      gameStatechart.withContext({\n        ...gameStatechart.context,\n        characters\n      })\n    )\n      // Subscribe calls to setState each time statechart transitions to new state\n      .onTransition(current => this.setState({ current }));\n  }\n\n  componentDidMount() {\n    this.service.start();\n  }\n\n  componentWillUnmount() {\n    this.service.stop();\n  }\n\n  matches(path) {\n    return matchesState(path, this.state.current.value);\n  }\n\n  renderScreen() {\n    const { context } = this.state.current;\n    const {\n      service: { send },\n      matches\n    } = this;\n\n    if (matches(\"soundOptions\")) {\n      return (\n        <SoundOptions\n          send={send}\n          toggleSound={() => {\n            this.setState(({ muted }) => ({ muted: !muted }));\n          }}\n        />\n      );\n    } else if (matches(\"intro\")) {\n      return <Intro transition={send} />;\n    } else if (matches(\"characterSelection\")) {\n      return <CharacterSelection send={send} characters={context.characters} />;\n    } else if (matches(\"challengerSelection\")) {\n      return (\n        <ChallengerSelection\n          send={send}\n          characters={context.characters}\n          characterId={context.characterId}\n        />\n      );\n    } else if (matches(\"battle\")) {\n      if (matches(\"battle.moveSelection\")) {\n        return (\n          <MoveSelection\n            character={context.characters.find(\n              character => character.id === context.characterId\n            )}\n            challenger={context.characters.find(\n              character => character.id === context.challengerId\n            )}\n            transition={send}\n          />\n        );\n      } else if (matches(\"battle.roundResult\")) {\n        return (\n          <RoundResult\n            character={context.characters.find(\n              character => character.id === context.characterId\n            )}\n            challenger={context.characters.find(\n              character => character.id === context.challengerId\n            )}\n            transition={send}\n          />\n        );\n      }\n    } else if (matches(\"win\")) {\n      return <Win transition={send} />;\n    } else if (matches(\"endGame\")) {\n      return <EndGame transition={send} />;\n    }\n    // no default\n  }\n\n  render() {\n    const { current } = this.state;\n    return (\n      <div className=\"App\" data-sc-value={current.toStrings()}>\n        {this.renderScreen()}\n        {current.value !== \"soundOptions\" && (\n          <audio id=\"audio_player\" controls muted={this.state.muted} autoPlay>\n            <source id=\"src_mp3\" type=\"audio/mp3\" src={mp3_file} />\n            <source id=\"src_ogg\" type=\"audio/ogg\" src=\"\" />\n            <object\n              id=\"audio_object\"\n              type=\"audio/x-mpeg\"\n              width=\"200px\"\n              height=\"45px\"\n              data={mp3_file}\n            >\n              <param id=\"param_src\" name=\"src\" value={mp3_file} />\n              <param id=\"param_src\" name=\"src\" value={mp3_file} />\n              <param name=\"autoplay\" value=\"false\" />\n              <param name=\"autostart\" value=\"false\" />\n            </object>\n          </audio>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}